version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    links:
      - zookeeper

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: devAdmin
      POSTGRES_PASSWORD: devAdmin
      POSTGRES_DB: postgres

  weather-data-generator:
    image: placeholder/weather-data-generator
    build:
      context: ./src/main/java/com/sdaia/assignment/Dev/Assignment/WeatherDataGenerator
      dockerfile: Dockerfile
    ports:
      - "8080:8080"

  ingestion-service:
    image: placeholder/ingestion-service
    build:
      context: ./src/main/java/com/sdaia/assignment/Dev/Assignment/IngestionService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      INGESTION_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      INGESTION_KAFKA_PRODUCER_KEY_SERIALIZER: org.apache.kafka.common.serialization.StringSerializer
      INGESTION_KAFKA_PRODUCER_VALUE_SERIALIZER: org.springframework.kafka.support.serializer.JsonSerializer

  monitor-app:
    image: placeholder/monitor-app
    build:
      context: ./src/main/java/com/sdaia/assignment/Dev/Assignment/MonitorApp
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      MONITOR_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MONITOR_KAFKA_CONSUMER_GROUP_ID: my-consumer-group
      MONITOR_SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      MONITOR_SPRING_DATASOURCE_USERNAME: devAdmin
      MONITOR_SPRING_DATASOURCE_PASSWORD: devAdmin
      MONITOR_SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      MONITOR_SPRING_JPA_HIBERNATE_DDL_AUTO: update
